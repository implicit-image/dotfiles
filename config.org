#+TITLE: Config
# $DOOMDIR/config.el -*- lexical-binding: t; -*-

# Place your private configuration here! Remember, you do not need to run 'doom
# sync' after modifying this file!




** Name and email
# Some functionality uses this to identify you, e.g. GPG configuration, email
# clients, file templates and snippets.
#+begin_src elisp
(setq user-full-name "Błażej Niewiadomski"
      user-mail-address "blaz.nie@protonmail.com")
#+end_src



** Fonts
# Doom exposes five (optional) variables for controlling fonts in Doom. Here
# are the three important ones:
#
# + `doom-font'
# + `doom-variable-pitch-font'
# + `doom-big-font' -- used for `doom-big-font-mode'; use this for
#   presentations or streaming.
# They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
# font string. You generally only need these two:
#+begin_src elisp
(setq doom-font (font-spec :family "Code New Roman Nerd Font Mono" :size 20)
       doom-variable-pitch-font (font-spec :family "sans" :size 16))
#+end_src

** Themes
# There are two ways to load a theme. Both assume the theme is installed and
# available. You can either set `doom-theme' or manually load a theme with the
# `load-theme' function. This is the default:
#+begin_src elisp
(load-theme 'doom-tomorrow-night t)
#+end_src

** Pdf-view
#+begin_src elisp

#+end_src
** Org mode
# If you use `org' and don't want your org files in the default location below,
# change `org-directory'. It must be set before org loads!
#+begin_src elisp
(setq org-directory "~/org/")
#+end_src

** General editor settings
# This determines the style of line numbers in effect. If set to `nil', line
# numbers are disabled. For relative line numbers, set this to `relative'.
#+begin_src elisp
(setq display-line-numbers-type 'relative)
#+end_src


** My Packages
# Here are some additional functions/macros that could help you configure Doom:
#
# - `load!' for loading external *.el files relative to this one
# - `use-package!' for configuring packages
# - `after!' for running code after a package has loaded
# - `add-load-path!' for adding directories to the `load-path', relative to
#   this file. Emacs searches the `load-path' when you load packages with
#   `require' or `use-package'.
#    `map!' for binding new keys
#
# To get information about any of these functions/macros, move the cursor over
# the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
# This will open documentation for it, including demos of how they are used.
#
# You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
# they are implemented.
*** word-wrap
#+begin_src elisp
(+global-word-wrap-mode +1)
#+end_src
*** js2-mode
#+begin_src elisp
(setq js2-indent-level 2)
#+end_src
*** org-mode
#+begin_src elisp
(setq org-odt-preffered-output-format "doc")
#+end_src
